PLAN:
- Presentation: Introduction
    - Flow of course
    - Background on me etc
- Discussion: How do you deploy right now?
	- Answer the following questions in note form: How you deploy software at the moment? How much does your process use source control to aid reproducibility?
- What is GitOps?
	- Three principles
	- History of GitOps (image)
- Key technologies
	- Infra:
		- AWS / virtual infrastructure
		- Terraform / CloudFormation etc
	- Platform:
		- Kubernetes (3 principles)
	- Git:
		- Uh, git
	- YAML/Declarative Config Management:
		- Kustomize
		- Helm
	- Push:
		- Gitlab CI/CD
		- GitHub Actions
	- Pull:
		- Flux / ArgoCD
	- Behemoths:
		- JenkinsX ("it's not Jenkins")
- see gitops.*pdf in this folder for outlines of discussion



((Promised:
	The three core principles of GitOps
	The key GitOps technologies in the market
	The limitations of GitOps))

PLAN:

GitOps challenges:
    - https://blog.container-solutions.com/gitops-limitations
    - secret management
        - sealed secrets: https://github.com/bitnami-labs/sealed-secrets#installation
        - secrets operator:
    - architecture/decisions (see: https://zwischenzugs.com/2020/11/30/gitops-decisions/)
    - repo proliferation
    - 'blind PRs'
        - test environments?

Presentation: Example GitOps Workflow
    - https://github.com/ianmiell/gitops-example
    - https://github.com/ianmiell/gitops-example-deploy
    - https://github.com/ianmiell/gitops-example-infra
    - https://github.com/ianmiell/gitops-example-app

Links:
	https://info.container-solutions.com/what-is-gitops-ebook
	https://www.oreilly.com/live-training/courses/gitops-first-steps/0636920480976/
	https://github.com/ianmiell/gitops-first-steps
	https://zwischenzugs.com/2020/11/30/gitops-decisions/



FROM O'REILLY:
OFFICIAL:
What you'll learn-and how you can apply it
By the end of this live online course, you’ll understand:


Create a simple GitOps workflow
Explain GitOps to your organization
Make a business case for GitOps
This training course is for you because...
You’re a software architect or engineer.
You work with Kubernetes.
You want to become a senior architect or engineer.
Prerequisites

A working knowledge of Git and Kubernetes
Familiarity with the concepts of declarative software (e.g., YAML)
A basic understanding of container building workflows
Recommended preparation:
Answer the following questions in note form: How you deploy software at the moment? How much does your process use source control to aid reproducibility?
